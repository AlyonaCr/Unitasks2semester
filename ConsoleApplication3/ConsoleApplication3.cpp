// ConsoleApplication3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <tchar.h>
#include "myString2.h"
#include "Point.h"
#include "Base.h"
#include "MyData.h"
#include "myString2.h"
#include "Pair.h"
#define	  stop __asm nop

// Темы:
// Перегрузка операторов.
// Встроенные объекты 

//#include "stdafx.h"	//если Вы используете предкомпиляцию заголовочных
					//файлов, раскомментируйте эту строчку

int _tmain(int argc, _TCHAR* argv[])
{
	

		//Задание 1.Перегрузка операторов.

		//Подключите к проекту файлы MyString.cpp и MyString.h
		//класса MyString, разработанного Вами на предыдущем занятии
		//9a. Перегрузите оператор присваивания для класса MyString
		//Проверьте корректность работы перегруженного оператора

		{
			MyString s1("AAA"), s2;
			s2=s1; 
			s1 = "CCC"; // 1. создали объект со строкой "ССС" 2. присвоили 3. удалили объект из п.1
			s2= MyString("tmp");
			s1=s1;	
			stop


		}

	

	
		//Создайте класс Point, который будет содержать координаты
		//"точки". Объявите конструктор (конструкторы) класса

		//1b. "Перегрузите" оператор += так, чтобы при выполнении
		//операции типа pt2+=pt1; складывались
		//одноименные переменные объектов pt1 и pt2, а сумма
		//присваивалась соответствующим переменным объекта pt2 или
		// в случае  pt2+=1; обе переменные объекта pt2 увеличивались на
		// указанное значение
		//a) с помощью метода класса (оператор +=)
		//б) с помощью глобальной функции (оператор -=) ---- ОПЕЧАТКА???
		//Проверьте корректность работы перегруженного оператора
		{
			Point pt1(1, 1);
			Point pt2(2, 2);
			pt2 += pt1;
			pt2 += 1;
			Point pt3(3, 3);
			pt2 += pt1 += pt3;
			stop
		}
	
	
		/*Задание 1c. Перегрузите оператор +/-
		a)с помощью методов класса (оператор +) 
		б) с помощью  глобальных функций (оператор -)
		так, чтобы любая из закомментированных строк
		кода выполнялась корректно*/
		{
			Point pt1(1, 1);
			Point pt2(2, 2);
			Point pt3;

			{
			pt3 = pt1 + 5;
			pt3 = pt1.operator+(5);
			pt3 = pt1 + 2;

			pt3 = 2 + pt1;
			pt3 = pt1 + pt2;

			pt3 = pt1 - 5;
			pt3 = pt1 - pt2;
			stop
			}
				//Задание 1d. Перегрузите унарный оператор +/-
			pt3 = -pt1;
			pt3 = +pt1;


		}
		//Задание 1d. Перегрузите оператор << (вывода в поток) для
		//класса MyString таким образом, чтобы при выполнении приведенной строки
		//на экран было выведено:
		//contents:  "QWERTY"

		MyString s("QWERTY");
		cout<<s<<endl;

		//Задание 1е Перегрузите оператор + и += для класса MyString
		MyString s1("ABC"), s2("kkk");
		//s1 +=s;
		//s2 = s+s1;
		s2 += s += s1;
		stop
	
	//Задание 2. Разработать "базу данных" о сотрудниках посредством ассоциативного
	//массива. Ключом является фамилия (ключ в задании уникален, поэтому нескольких Ивановых
	//в базе быть не может), а данными: пол, возраст, должность, зарплата...
	//Реализуйте:
	//добавление сотрудников в базу
	//исключение
	//вывод информации о конкретном сотруднике
	//вывод всей (или интересующей) информации о всех сотрудниках
	//Например:

		Base bd;	//создание пустой базы
		bd["Ivanov"] = MyData("Sales Manager", MyData::MALE, 31, 55000);	//если Ivanov-а в базе еще нет, то
						//добавление, если уже есть, то замена его реквизитов
		bd["Petrov"] = MyData("Engineer", MyData::MALE, 45, 80000);
		bd["Sidornov"] = MyData("PR Manager", MyData::MALE, 28, 45000);
		bd["Ivanov"] = MyData("Event Manager", MyData::MALE, 44, 40000);

		std::cout<<bd;	//вывод информации обо всех сотрудниках
		//А также:
		Base bdnew = bd;
		
		 bdnew = bd;
		 bd.deletePair("Ivanov");
		 std::cout << bd;
		//А также можно вспомнить про семантику перемещения...

	return 0;
}//endmain

